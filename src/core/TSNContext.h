#ifndef _TSN_CONTEXT_H
#define _TSN_CONTEXT_H

#include <memory>

#include "./port/PortManager.h"

namespace faker_tsn {

class ITSNContextState;

class TSNContext {
   private:
    std::string m_deviceName;                   /* device name generated by tsn configurator */
    std::shared_ptr<ITSNContextState> m_state;  /* tsn context state */
    std::shared_ptr<PortManager> m_portManager; /* port manager */

    TSNContext(/* args */);

   public:
    TSNContext(const TSNContext&) = delete;
    
    ~TSNContext();

    /* get singleton */
    static TSNContext& getInstance() {
        static TSNContext context;
        return context;
    }

    /* return device name */
    std::string getDeviceName() {
        return this->m_deviceName;
    }

    /* return port manager */
    std::shared_ptr<PortManager> getPortManager() {
        return this->m_portManager;
    }

    /* change current state */
    virtual void setState(const std::shared_ptr<ITSNContextState>&);

    /* return current state */
    virtual std::shared_ptr<ITSNContextState>& getState();
};

}  // namespace faker_tsn

#endif